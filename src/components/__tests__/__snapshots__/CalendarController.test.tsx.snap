// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CalendarController /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentMoment={"2014-02-27T00:00:00.000Z"}
    mode="월"
    onChangeMode={[Function]}
    onChangeMoment={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Icon
          onClick={[Function]}
          style={
                    Object {
                              "marginRight": "10px",
                            }
          }
          type="left"
/>,
        <Unknown
          onClick={[Function]}
>
          2014년 / 2월
</Unknown>,
        <Icon
          onClick={[Function]}
          style={
                    Object {
                              "marginLeft": "10px",
                            }
          }
          type="right"
/>,
        <Unknown>
          <Unknown
                    currentMode="월"
                    onChangeMode={[Function]}
          />
</Unknown>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onClick": [Function],
          "style": Object {
            "marginRight": "10px",
          },
          "type": "left",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "2014년 / 2월",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "2014년 / 2월",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "rules": Array [
              "
    display: inline;
",
            ],
          },
          "displayName": "Label",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "h3",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onClick": [Function],
          "style": Object {
            "marginLeft": "10px",
          },
          "type": "right",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Unknown
            currentMode="월"
            onChangeMode={[Function]}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "currentMode": "월",
            "onChangeMode": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
    position: absolute;
    right: 40px;
    right: 40px;
    top: 20px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;
    padding: 20px;
    font-size: 1.5em;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Icon
            onClick={[Function]}
            style={
                        Object {
                                    "marginRight": "10px",
                                  }
            }
            type="left"
/>,
          <Unknown
            onClick={[Function]}
>
            2014년 / 2월
</Unknown>,
          <Icon
            onClick={[Function]}
            style={
                        Object {
                                    "marginLeft": "10px",
                                  }
            }
            type="right"
/>,
          <Unknown>
            <Unknown
                        currentMode="월"
                        onChangeMode={[Function]}
            />
</Unknown>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClick": [Function],
            "style": Object {
              "marginRight": "10px",
            },
            "type": "left",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "2014년 / 2월",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "2014년 / 2월",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
    display: inline;
",
              ],
            },
            "displayName": "Label",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "h3",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClick": [Function],
            "style": Object {
              "marginLeft": "10px",
            },
            "type": "right",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Unknown
              currentMode="월"
              onChangeMode={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentMode": "월",
              "onChangeMode": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
    position: absolute;
    right: 40px;
    right: 40px;
    top: 20px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    position: relative;
    padding: 20px;
    font-size: 1.5em;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
