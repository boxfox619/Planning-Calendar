// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Calendar /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentMoment={"2014-02-27T01:00:00.000Z"}
    mode="월"
    onSelect={[Function]}
    onUpdate={[Function]}
    tasks={
        Array [
            Task {
              "date": "2019-01-21",
              "endHour": 12,
              "id": 12,
              "name": "이름",
              "startHour": 3,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Unknown
          currentMoment={"2014-02-27T01:00:00.000Z"}
          style={
                    Object {
                              "flex": 1,
                            }
          }
          tasks={
                    Array [
                              Task {
                                "date": "2019-01-21",
                                "endHour": 12,
                                "id": 12,
                                "name": "이름",
                                "startHour": 3,
                              },
                            ]
          }
/>,
        false,
      ],
      "onClick": [Function],
      "onDragOver": [Function],
      "onDragStart": [Function],
      "onDrop": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "currentMoment": "2014-02-27T01:00:00.000Z",
          "style": Object {
            "flex": 1,
          },
          "tasks": Array [
            Task {
              "date": "2019-01-21",
              "endHour": 12,
              "id": 12,
              "name": "이름",
              "startHour": 3,
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-jTzLTM",
        "isStatic": true,
        "rules": Array [
          "
    display: flex;
    flex-flow: column;
    padding: 0 10px;
",
        ],
      },
      "displayName": "Container",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-jTzLTM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Unknown
            currentMoment={"2014-02-27T01:00:00.000Z"}
            style={
                        Object {
                                    "flex": 1,
                                  }
            }
            tasks={
                        Array [
                                    Task {
                                      "date": "2019-01-21",
                                      "endHour": 12,
                                      "id": 12,
                                      "name": "이름",
                                      "startHour": 3,
                                    },
                                  ]
            }
/>,
          false,
        ],
        "onClick": [Function],
        "onDragOver": [Function],
        "onDragStart": [Function],
        "onDrop": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "currentMoment": "2014-02-27T01:00:00.000Z",
            "style": Object {
              "flex": 1,
            },
            "tasks": Array [
              Task {
                "date": "2019-01-21",
                "endHour": 12,
                "id": 12,
                "name": "이름",
                "startHour": 3,
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-jTzLTM",
          "isStatic": true,
          "rules": Array [
            "
    display: flex;
    flex-flow: column;
    padding: 0 10px;
",
          ],
        },
        "displayName": "Container",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-jTzLTM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
