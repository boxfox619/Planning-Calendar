// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskItem /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    task={
        Task {
            "date": "2019-10-11",
            "endHour": 3,
            "id": 1,
            "name": "이름",
            "startHour": 2,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Unknown
        data-taskid={1}
        draggable={true}
>
        이름
</Unknown>,
      "content": "2019-10-11 2시 ~ 3시",
      "mouseEnterDelay": 0.1,
      "mouseLeaveDelay": 0.1,
      "overlayStyle": Object {},
      "placement": "top",
      "title": "이름",
      "transitionName": "zoom-big",
      "trigger": "hover",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "이름",
        "data-taskid": 1,
        "draggable": true,
      },
      "ref": null,
      "rendered": "이름",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    width: 100%;
    height: auto;
    transition: none;
    transition: background-color 0.5s linear;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    display: block;
    text-overflow: ellipsis;
    padding: 0 2px;
    &:focus, &:hover {
        color: #fff !important;
        background-color: ",
            "#FFCD02",
            " !important;
        border-color: ",
            "#FFCD02",
            " !important;
    }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Unknown
          data-taskid={1}
          draggable={true}
>
          이름
</Unknown>,
        "content": "2019-10-11 2시 ~ 3시",
        "mouseEnterDelay": 0.1,
        "mouseLeaveDelay": 0.1,
        "overlayStyle": Object {},
        "placement": "top",
        "title": "이름",
        "transitionName": "zoom-big",
        "trigger": "hover",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "이름",
          "data-taskid": 1,
          "draggable": true,
        },
        "ref": null,
        "rendered": "이름",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
    width: 100%;
    height: auto;
    transition: none;
    transition: background-color 0.5s linear;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    display: block;
    text-overflow: ellipsis;
    padding: 0 2px;
    &:focus, &:hover {
        color: #fff !important;
        background-color: ",
              "#FFCD02",
              " !important;
        border-color: ",
              "#FFCD02",
              " !important;
    }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
